( init_size -- addr)
: constant_pool
	dup
	2 + cells malloc >r
	r@ ! ( size of pool )
	r@ 2 cells + ( pointer to next slot) 
	r@ 1 cells + ! ( store in the index )
	r>
;

( pool -- size )
: pool_max  @ ;

( pool -- num )
: pool_index 1 cells + ;

( pool -- addr )
: pool_data 2 cells + ;

( pool -- num )
: pool_size
	dup 
	1 cells + @
	swap - 2 cells - 1 cells /
;

( pool -- boolean )
: pool_full?
	dup 2@ swap   ( pool index size )
	cells - 2 cells -         ( pool ptr )
	<=
;

( item pool -- )
: constant_pool_add
	dup pool_index >r
	pool_full? if
		# something clever
	else
		r@ @ ! 				# store the item at the index
		r> dup @
		1 cells + swap ! 	# advance the index
	then
;

: utf8_struct ( str -- addr)
	dup strlen
	constant_utf8_tag
	3 cells malloc >r
	r@ !
	r@ 1 cells + !
	r@ 2 cells + !
	r>
;

: utf8_len ( utf8 -- len ) 1 cells + ;
: utf8_str ( utf8 -- str ) 2 cells + ;

: utf8_write ( utf8 -- )
	>r
	r@ u1 @
	r@ utf8_len @  u2
	r@ utf8_str @ puts
	r>
;


